package booking;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.io.*;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.gson.Gson;
import com.google.gson.JsonObject;

@WebServlet("/emp")
public class EmployeeServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	int index = 0;

	ArrayList<Employee> empList = new ArrayList<>();

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		System.out.println(1);

		try {
			System.out.println(1);
			Class.forName("org.postgresql.Driver");

			Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/ajay",
					"postgres", "Maddineni@123");
			Statement st = con.createStatement();
			ResultSet rs = st.executeQuery("select * from emp");

			while (rs.next()) {

				int num = Integer.parseInt(rs.getString(1));
				System.out.println(num);
				String name = rs.getString(2);
				double salary = Double.parseDouble(rs.getString(3));
				String job = rs.getString(4);
				Employee e = new Employee(num, name, salary, job);

				empList.add(e);

			}
			con.close();

		} catch (Exception e) {

			e.printStackTrace();
		}

		JsonObject json = new JsonObject();
		String click = request.getParameter("click");

		if (click == null) {
			json.addProperty("empId", empList.get(0).getId());
			json.addProperty("empName", empList.get(0).getName());
			json.addProperty("empSalary", empList.get(0).getSalary());
			json.addProperty("empJob", empList.get(0).getJob());

			response.setContentType("application/json");
			response.getWriter().write(json.toString());
		}

		if ("first".equals(click)) {
			index = 0;
			sending(json);
			response.setContentType("application/json");
			response.getWriter().write(json.toString());

		} else if ("next".equals(click)) {
			index++;
			sending(json);
			response.setContentType("application/json");
			response.getWriter().write(json.toString());
			System.out.println(index);

		} else if ("prev".equals(click)) {
			if (index < 0) {
				index = 0;
			} else {
				index--;
			}
			sending(json);
			response.setContentType("application/json");
			response.getWriter().write(json.toString());

		} else if ("last".equals(click)) {
			index = empList.size() - 1;
			sending(json);
			response.setContentType("application/json");
			response.getWriter().write(json.toString());
		}
		else if("save".equals(click)) {
			
			int id=Integer.parseInt(request.getParameter("id"));
			String name=request.getParameter("name");
			double salary=Double.parseDouble(request.getParameter("sal"));
			String job=request.getParameter("job");

			try {
				System.out.println(1);
				Class.forName("org.postgresql.Driver");

				Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/ajay",
						"postgres", "Maddineni@123");
				PreparedStatement ps = con.prepareStatement("insert into emp(id,name,salary,job) values(?,?,?,?)");
				
				ps.setInt(1,id);
				ps.setString(2, name);
				ps.setDouble(3, salary);
				ps.setString(4,job);
				
				int success=ps.executeUpdate();
				System.out.println(success);
				response.getWriter().write(success);
		}catch(Exception e){
			
		}
		}
		else if("delete".equals(click)) {
			
			int id=Integer.parseInt(request.getParameter("id"));
			

			try {
				System.out.println(1);
				Class.forName("org.postgresql.Driver");

				Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/ajay",
						"postgres", "Maddineni@123");
				Statement st=con.createStatement();
				String s="delete from emp where id="+id;
				int success=st.executeUpdate(s);
				System.out.println(success);
				response.getWriter().write(success);
		}catch(Exception e){
			
		}
			
		}

	}

	public void sending(JsonObject json) {

		System.out.println(index);
		json.addProperty("empId", empList.get(index).getId());
		json.addProperty("empName", empList.get(index).getName());
		json.addProperty("empSalary", empList.get(index).getSalary());
		json.addProperty("empJob", empList.get(index).getJob());
	}

}
